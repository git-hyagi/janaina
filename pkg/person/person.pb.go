// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.1
// source: person.proto

package person

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Person struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdPerson uint32 `protobuf:"varint,1,opt,name=idPerson,proto3" json:"idPerson,omitempty"`
	Contact  uint32 `protobuf:"varint,2,opt,name=contact,proto3" json:"contact,omitempty"`
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Surname  string `protobuf:"bytes,5,opt,name=surname,proto3" json:"surname,omitempty"`
	Type     string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Password string `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *Person) Reset() {
	*x = Person{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_person_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_person_proto_rawDescGZIP(), []int{0}
}

func (x *Person) GetIdPerson() uint32 {
	if x != nil {
		return x.IdPerson
	}
	return 0
}

func (x *Person) GetContact() uint32 {
	if x != nil {
		return x.Contact
	}
	return 0
}

func (x *Person) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Person) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Person) GetSurname() string {
	if x != nil {
		return x.Surname
	}
	return ""
}

func (x *Person) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Person) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdContact uint32 `protobuf:"varint,1,opt,name=idContact,proto3" json:"idContact,omitempty"`
	Phone     string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Email     string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Facebook  string `protobuf:"bytes,4,opt,name=facebook,proto3" json:"facebook,omitempty"`
}

func (x *Contact) Reset() {
	*x = Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_person_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_person_proto_rawDescGZIP(), []int{1}
}

func (x *Contact) GetIdContact() uint32 {
	if x != nil {
		return x.IdContact
	}
	return 0
}

func (x *Contact) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Contact) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Contact) GetFacebook() string {
	if x != nil {
		return x.Facebook
	}
	return ""
}

type Admin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdAdmin  uint32   `protobuf:"varint,1,opt,name=idAdmin,proto3" json:"idAdmin,omitempty"`
	IdPerson uint32   `protobuf:"varint,2,opt,name=idPerson,proto3" json:"idPerson,omitempty"`
	Person   *Person  `protobuf:"bytes,3,opt,name=person,proto3" json:"person,omitempty"`
	Contact  *Contact `protobuf:"bytes,4,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (x *Admin) Reset() {
	*x = Admin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Admin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Admin) ProtoMessage() {}

func (x *Admin) ProtoReflect() protoreflect.Message {
	mi := &file_person_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Admin.ProtoReflect.Descriptor instead.
func (*Admin) Descriptor() ([]byte, []int) {
	return file_person_proto_rawDescGZIP(), []int{2}
}

func (x *Admin) GetIdAdmin() uint32 {
	if x != nil {
		return x.IdAdmin
	}
	return 0
}

func (x *Admin) GetIdPerson() uint32 {
	if x != nil {
		return x.IdPerson
	}
	return 0
}

func (x *Admin) GetPerson() *Person {
	if x != nil {
		return x.Person
	}
	return nil
}

func (x *Admin) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

type Patient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdPatient uint32   `protobuf:"varint,1,opt,name=idPatient,proto3" json:"idPatient,omitempty"`
	IdPerson  uint32   `protobuf:"varint,2,opt,name=idPerson,proto3" json:"idPerson,omitempty"`
	Person    *Person  `protobuf:"bytes,3,opt,name=person,proto3" json:"person,omitempty"`
	Contact   *Contact `protobuf:"bytes,5,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (x *Patient) Reset() {
	*x = Patient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Patient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Patient) ProtoMessage() {}

func (x *Patient) ProtoReflect() protoreflect.Message {
	mi := &file_person_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Patient.ProtoReflect.Descriptor instead.
func (*Patient) Descriptor() ([]byte, []int) {
	return file_person_proto_rawDescGZIP(), []int{3}
}

func (x *Patient) GetIdPatient() uint32 {
	if x != nil {
		return x.IdPatient
	}
	return 0
}

func (x *Patient) GetIdPerson() uint32 {
	if x != nil {
		return x.IdPerson
	}
	return 0
}

func (x *Patient) GetPerson() *Person {
	if x != nil {
		return x.Person
	}
	return nil
}

func (x *Patient) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

type Medic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdMedic  uint32   `protobuf:"varint,1,opt,name=idMedic,proto3" json:"idMedic,omitempty"`
	Crm      string   `protobuf:"bytes,2,opt,name=crm,proto3" json:"crm,omitempty"`
	IdPerson uint32   `protobuf:"varint,3,opt,name=idPerson,proto3" json:"idPerson,omitempty"`
	Person   *Person  `protobuf:"bytes,4,opt,name=person,proto3" json:"person,omitempty"`
	Contact  *Contact `protobuf:"bytes,5,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (x *Medic) Reset() {
	*x = Medic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Medic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Medic) ProtoMessage() {}

func (x *Medic) ProtoReflect() protoreflect.Message {
	mi := &file_person_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Medic.ProtoReflect.Descriptor instead.
func (*Medic) Descriptor() ([]byte, []int) {
	return file_person_proto_rawDescGZIP(), []int{4}
}

func (x *Medic) GetIdMedic() uint32 {
	if x != nil {
		return x.IdMedic
	}
	return 0
}

func (x *Medic) GetCrm() string {
	if x != nil {
		return x.Crm
	}
	return ""
}

func (x *Medic) GetIdPerson() uint32 {
	if x != nil {
		return x.IdPerson
	}
	return 0
}

func (x *Medic) GetPerson() *Person {
	if x != nil {
		return x.Person
	}
	return nil
}

func (x *Medic) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

type Type struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdPerson  uint32 `protobuf:"varint,1,opt,name=idPerson,proto3" json:"idPerson,omitempty"`
	IdMedic   uint32 `protobuf:"varint,2,opt,name=idMedic,proto3" json:"idMedic,omitempty"`
	IdAdmin   uint32 `protobuf:"varint,3,opt,name=idAdmin,proto3" json:"idAdmin,omitempty"`
	IdPatient uint32 `protobuf:"varint,4,opt,name=idPatient,proto3" json:"idPatient,omitempty"`
	Role      string `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *Type) Reset() {
	*x = Type{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type) ProtoMessage() {}

func (x *Type) ProtoReflect() protoreflect.Message {
	mi := &file_person_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type.ProtoReflect.Descriptor instead.
func (*Type) Descriptor() ([]byte, []int) {
	return file_person_proto_rawDescGZIP(), []int{5}
}

func (x *Type) GetIdPerson() uint32 {
	if x != nil {
		return x.IdPerson
	}
	return 0
}

func (x *Type) GetIdMedic() uint32 {
	if x != nil {
		return x.IdMedic
	}
	return 0
}

func (x *Type) GetIdAdmin() uint32 {
	if x != nil {
		return x.IdAdmin
	}
	return 0
}

func (x *Type) GetIdPatient() uint32 {
	if x != nil {
		return x.IdPatient
	}
	return 0
}

func (x *Type) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_person_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_person_proto_rawDescGZIP(), []int{6}
}

func (x *Message) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type PrimaryKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *PrimaryKey) Reset() {
	*x = PrimaryKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrimaryKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimaryKey) ProtoMessage() {}

func (x *PrimaryKey) ProtoReflect() protoreflect.Message {
	mi := &file_person_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimaryKey.ProtoReflect.Descriptor instead.
func (*PrimaryKey) Descriptor() ([]byte, []int) {
	return file_person_proto_rawDescGZIP(), []int{7}
}

func (x *PrimaryKey) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type UpdateField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username   string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	NewContent string `protobuf:"bytes,2,opt,name=newContent,proto3" json:"newContent,omitempty"`
}

func (x *UpdateField) Reset() {
	*x = UpdateField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateField) ProtoMessage() {}

func (x *UpdateField) ProtoReflect() protoreflect.Message {
	mi := &file_person_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateField.ProtoReflect.Descriptor instead.
func (*UpdateField) Descriptor() ([]byte, []int) {
	return file_person_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateField) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateField) GetNewContent() string {
	if x != nil {
		return x.NewContent
	}
	return ""
}

var File_person_proto protoreflect.FileDescriptor

var file_person_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x22, 0xb8, 0x01, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x6f, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x69, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f,
	0x6f, 0x6b, 0x22, 0x90, 0x01, 0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69,
	0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x64, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x52, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x07, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x64, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x64, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x69, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x06, 0x70,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x22, 0xa2,
	0x01, 0x0a, 0x05, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x64, 0x4d, 0x65,
	0x64, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x64, 0x4d, 0x65, 0x64,
	0x69, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x63, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x12, 0x26, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x52, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x69, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x64, 0x4d, 0x65,
	0x64, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x64, 0x4d, 0x65, 0x64,
	0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x64, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x69, 0x64, 0x50, 0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x1d,
	0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x28, 0x0a,
	0x0a, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x49, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x32, 0xe1, 0x04, 0x0a, 0x0c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x64,
	0x69, 0x63, 0x12, 0x0d, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x64, 0x69,
	0x63, 0x1a, 0x0f, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x74, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0f, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x50,
	0x61, 0x74, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x0d, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f,
	0x6e, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x0f, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0c, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x12, 0x2e, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x1a, 0x0f,
	0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x00, 0x12, 0x32, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12,
	0x12, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x4b, 0x65, 0x79, 0x1a, 0x0e, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x13, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x1a, 0x0f, 0x2e, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x1a, 0x0f, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x63,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x13, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x1a, 0x0f, 0x2e, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x1a, 0x0f, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x13, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x1a, 0x0f, 0x2e, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x13,
	0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x1a, 0x0f, 0x2e, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x74, 0x2d, 0x68, 0x79, 0x61, 0x67, 0x69, 0x2f, 0x74,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x69, 0x6e, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_person_proto_rawDescOnce sync.Once
	file_person_proto_rawDescData = file_person_proto_rawDesc
)

func file_person_proto_rawDescGZIP() []byte {
	file_person_proto_rawDescOnce.Do(func() {
		file_person_proto_rawDescData = protoimpl.X.CompressGZIP(file_person_proto_rawDescData)
	})
	return file_person_proto_rawDescData
}

var file_person_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_person_proto_goTypes = []interface{}{
	(*Person)(nil),      // 0: person.Person
	(*Contact)(nil),     // 1: person.Contact
	(*Admin)(nil),       // 2: person.Admin
	(*Patient)(nil),     // 3: person.Patient
	(*Medic)(nil),       // 4: person.Medic
	(*Type)(nil),        // 5: person.Type
	(*Message)(nil),     // 6: person.Message
	(*PrimaryKey)(nil),  // 7: person.PrimaryKey
	(*UpdateField)(nil), // 8: person.UpdateField
}
var file_person_proto_depIdxs = []int32{
	0,  // 0: person.Admin.person:type_name -> person.Person
	1,  // 1: person.Admin.contact:type_name -> person.Contact
	0,  // 2: person.Patient.person:type_name -> person.Person
	1,  // 3: person.Patient.contact:type_name -> person.Contact
	0,  // 4: person.Medic.person:type_name -> person.Person
	1,  // 5: person.Medic.contact:type_name -> person.Contact
	4,  // 6: person.ManagePerson.CreateMedic:input_type -> person.Medic
	3,  // 7: person.ManagePerson.CreatePatient:input_type -> person.Patient
	2,  // 8: person.ManagePerson.CreateAdmin:input_type -> person.Admin
	7,  // 9: person.ManagePerson.RemovePerson:input_type -> person.PrimaryKey
	7,  // 10: person.ManagePerson.FindPerson:input_type -> person.PrimaryKey
	8,  // 11: person.ManagePerson.UpdateEmail:input_type -> person.UpdateField
	8,  // 12: person.ManagePerson.UpdatePhone:input_type -> person.UpdateField
	8,  // 13: person.ManagePerson.UpdateFacebook:input_type -> person.UpdateField
	8,  // 14: person.ManagePerson.UpdateName:input_type -> person.UpdateField
	8,  // 15: person.ManagePerson.UpdateSurname:input_type -> person.UpdateField
	8,  // 16: person.ManagePerson.UpdatePassword:input_type -> person.UpdateField
	6,  // 17: person.ManagePerson.CreateMedic:output_type -> person.Message
	6,  // 18: person.ManagePerson.CreatePatient:output_type -> person.Message
	6,  // 19: person.ManagePerson.CreateAdmin:output_type -> person.Message
	6,  // 20: person.ManagePerson.RemovePerson:output_type -> person.Message
	0,  // 21: person.ManagePerson.FindPerson:output_type -> person.Person
	6,  // 22: person.ManagePerson.UpdateEmail:output_type -> person.Message
	6,  // 23: person.ManagePerson.UpdatePhone:output_type -> person.Message
	6,  // 24: person.ManagePerson.UpdateFacebook:output_type -> person.Message
	6,  // 25: person.ManagePerson.UpdateName:output_type -> person.Message
	6,  // 26: person.ManagePerson.UpdateSurname:output_type -> person.Message
	6,  // 27: person.ManagePerson.UpdatePassword:output_type -> person.Message
	17, // [17:28] is the sub-list for method output_type
	6,  // [6:17] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_person_proto_init() }
func file_person_proto_init() {
	if File_person_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_person_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Person); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Admin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Patient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Medic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrimaryKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_person_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_person_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_person_proto_goTypes,
		DependencyIndexes: file_person_proto_depIdxs,
		MessageInfos:      file_person_proto_msgTypes,
	}.Build()
	File_person_proto = out.File
	file_person_proto_rawDesc = nil
	file_person_proto_goTypes = nil
	file_person_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ManagePersonClient is the client API for ManagePerson service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ManagePersonClient interface {
	CreateMedic(ctx context.Context, in *Medic, opts ...grpc.CallOption) (*Message, error)
	CreatePatient(ctx context.Context, in *Patient, opts ...grpc.CallOption) (*Message, error)
	CreateAdmin(ctx context.Context, in *Admin, opts ...grpc.CallOption) (*Message, error)
	RemovePerson(ctx context.Context, in *PrimaryKey, opts ...grpc.CallOption) (*Message, error)
	FindPerson(ctx context.Context, in *PrimaryKey, opts ...grpc.CallOption) (*Person, error)
	UpdateEmail(ctx context.Context, in *UpdateField, opts ...grpc.CallOption) (*Message, error)
	UpdatePhone(ctx context.Context, in *UpdateField, opts ...grpc.CallOption) (*Message, error)
	UpdateFacebook(ctx context.Context, in *UpdateField, opts ...grpc.CallOption) (*Message, error)
	UpdateName(ctx context.Context, in *UpdateField, opts ...grpc.CallOption) (*Message, error)
	UpdateSurname(ctx context.Context, in *UpdateField, opts ...grpc.CallOption) (*Message, error)
	UpdatePassword(ctx context.Context, in *UpdateField, opts ...grpc.CallOption) (*Message, error)
}

type managePersonClient struct {
	cc grpc.ClientConnInterface
}

func NewManagePersonClient(cc grpc.ClientConnInterface) ManagePersonClient {
	return &managePersonClient{cc}
}

func (c *managePersonClient) CreateMedic(ctx context.Context, in *Medic, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/person.ManagePerson/CreateMedic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managePersonClient) CreatePatient(ctx context.Context, in *Patient, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/person.ManagePerson/CreatePatient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managePersonClient) CreateAdmin(ctx context.Context, in *Admin, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/person.ManagePerson/CreateAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managePersonClient) RemovePerson(ctx context.Context, in *PrimaryKey, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/person.ManagePerson/RemovePerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managePersonClient) FindPerson(ctx context.Context, in *PrimaryKey, opts ...grpc.CallOption) (*Person, error) {
	out := new(Person)
	err := c.cc.Invoke(ctx, "/person.ManagePerson/FindPerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managePersonClient) UpdateEmail(ctx context.Context, in *UpdateField, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/person.ManagePerson/UpdateEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managePersonClient) UpdatePhone(ctx context.Context, in *UpdateField, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/person.ManagePerson/UpdatePhone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managePersonClient) UpdateFacebook(ctx context.Context, in *UpdateField, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/person.ManagePerson/UpdateFacebook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managePersonClient) UpdateName(ctx context.Context, in *UpdateField, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/person.ManagePerson/UpdateName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managePersonClient) UpdateSurname(ctx context.Context, in *UpdateField, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/person.ManagePerson/UpdateSurname", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *managePersonClient) UpdatePassword(ctx context.Context, in *UpdateField, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/person.ManagePerson/UpdatePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ManagePersonServer is the server API for ManagePerson service.
type ManagePersonServer interface {
	CreateMedic(context.Context, *Medic) (*Message, error)
	CreatePatient(context.Context, *Patient) (*Message, error)
	CreateAdmin(context.Context, *Admin) (*Message, error)
	RemovePerson(context.Context, *PrimaryKey) (*Message, error)
	FindPerson(context.Context, *PrimaryKey) (*Person, error)
	UpdateEmail(context.Context, *UpdateField) (*Message, error)
	UpdatePhone(context.Context, *UpdateField) (*Message, error)
	UpdateFacebook(context.Context, *UpdateField) (*Message, error)
	UpdateName(context.Context, *UpdateField) (*Message, error)
	UpdateSurname(context.Context, *UpdateField) (*Message, error)
	UpdatePassword(context.Context, *UpdateField) (*Message, error)
}

// UnimplementedManagePersonServer can be embedded to have forward compatible implementations.
type UnimplementedManagePersonServer struct {
}

func (*UnimplementedManagePersonServer) CreateMedic(context.Context, *Medic) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMedic not implemented")
}
func (*UnimplementedManagePersonServer) CreatePatient(context.Context, *Patient) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePatient not implemented")
}
func (*UnimplementedManagePersonServer) CreateAdmin(context.Context, *Admin) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAdmin not implemented")
}
func (*UnimplementedManagePersonServer) RemovePerson(context.Context, *PrimaryKey) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePerson not implemented")
}
func (*UnimplementedManagePersonServer) FindPerson(context.Context, *PrimaryKey) (*Person, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindPerson not implemented")
}
func (*UnimplementedManagePersonServer) UpdateEmail(context.Context, *UpdateField) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEmail not implemented")
}
func (*UnimplementedManagePersonServer) UpdatePhone(context.Context, *UpdateField) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePhone not implemented")
}
func (*UnimplementedManagePersonServer) UpdateFacebook(context.Context, *UpdateField) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFacebook not implemented")
}
func (*UnimplementedManagePersonServer) UpdateName(context.Context, *UpdateField) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateName not implemented")
}
func (*UnimplementedManagePersonServer) UpdateSurname(context.Context, *UpdateField) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSurname not implemented")
}
func (*UnimplementedManagePersonServer) UpdatePassword(context.Context, *UpdateField) (*Message, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePassword not implemented")
}

func RegisterManagePersonServer(s *grpc.Server, srv ManagePersonServer) {
	s.RegisterService(&_ManagePerson_serviceDesc, srv)
}

func _ManagePerson_CreateMedic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Medic)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagePersonServer).CreateMedic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/person.ManagePerson/CreateMedic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagePersonServer).CreateMedic(ctx, req.(*Medic))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManagePerson_CreatePatient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Patient)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagePersonServer).CreatePatient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/person.ManagePerson/CreatePatient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagePersonServer).CreatePatient(ctx, req.(*Patient))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManagePerson_CreateAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Admin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagePersonServer).CreateAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/person.ManagePerson/CreateAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagePersonServer).CreateAdmin(ctx, req.(*Admin))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManagePerson_RemovePerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrimaryKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagePersonServer).RemovePerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/person.ManagePerson/RemovePerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagePersonServer).RemovePerson(ctx, req.(*PrimaryKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManagePerson_FindPerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrimaryKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagePersonServer).FindPerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/person.ManagePerson/FindPerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagePersonServer).FindPerson(ctx, req.(*PrimaryKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManagePerson_UpdateEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateField)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagePersonServer).UpdateEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/person.ManagePerson/UpdateEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagePersonServer).UpdateEmail(ctx, req.(*UpdateField))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManagePerson_UpdatePhone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateField)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagePersonServer).UpdatePhone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/person.ManagePerson/UpdatePhone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagePersonServer).UpdatePhone(ctx, req.(*UpdateField))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManagePerson_UpdateFacebook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateField)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagePersonServer).UpdateFacebook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/person.ManagePerson/UpdateFacebook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagePersonServer).UpdateFacebook(ctx, req.(*UpdateField))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManagePerson_UpdateName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateField)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagePersonServer).UpdateName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/person.ManagePerson/UpdateName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagePersonServer).UpdateName(ctx, req.(*UpdateField))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManagePerson_UpdateSurname_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateField)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagePersonServer).UpdateSurname(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/person.ManagePerson/UpdateSurname",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagePersonServer).UpdateSurname(ctx, req.(*UpdateField))
	}
	return interceptor(ctx, in, info, handler)
}

func _ManagePerson_UpdatePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateField)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ManagePersonServer).UpdatePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/person.ManagePerson/UpdatePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ManagePersonServer).UpdatePassword(ctx, req.(*UpdateField))
	}
	return interceptor(ctx, in, info, handler)
}

var _ManagePerson_serviceDesc = grpc.ServiceDesc{
	ServiceName: "person.ManagePerson",
	HandlerType: (*ManagePersonServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMedic",
			Handler:    _ManagePerson_CreateMedic_Handler,
		},
		{
			MethodName: "CreatePatient",
			Handler:    _ManagePerson_CreatePatient_Handler,
		},
		{
			MethodName: "CreateAdmin",
			Handler:    _ManagePerson_CreateAdmin_Handler,
		},
		{
			MethodName: "RemovePerson",
			Handler:    _ManagePerson_RemovePerson_Handler,
		},
		{
			MethodName: "FindPerson",
			Handler:    _ManagePerson_FindPerson_Handler,
		},
		{
			MethodName: "UpdateEmail",
			Handler:    _ManagePerson_UpdateEmail_Handler,
		},
		{
			MethodName: "UpdatePhone",
			Handler:    _ManagePerson_UpdatePhone_Handler,
		},
		{
			MethodName: "UpdateFacebook",
			Handler:    _ManagePerson_UpdateFacebook_Handler,
		},
		{
			MethodName: "UpdateName",
			Handler:    _ManagePerson_UpdateName_Handler,
		},
		{
			MethodName: "UpdateSurname",
			Handler:    _ManagePerson_UpdateSurname_Handler,
		},
		{
			MethodName: "UpdatePassword",
			Handler:    _ManagePerson_UpdatePassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "person.proto",
}
